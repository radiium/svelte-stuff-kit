export declare const size0: "0";
export declare const size1: "1";
export declare const size2: "2";
export declare const size3: "3";
export declare const size4: "4";
export declare const size5: "5";
export declare const size6: "6";
export declare const size7: "7";
export declare const size8: "8";
export declare const size9: "9";
export declare const Sizes0To1: readonly ["0", "1"];
export declare const Sizes1To2: readonly ["1", "2"];
export declare const Sizes1To3: readonly ["1", "2", "3"];
export declare const Sizes1To4: readonly ["1", "2", "3", "4"];
export declare const Sizes1To5: readonly ["1", "2", "3", "4", "5"];
export declare const Sizes1To9: readonly ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
export declare const Sizes0To9: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
export declare const Colors: readonly ["neutral", "primary", "blue", "green", "yellow", "orange", "red"];
export declare const Variants: readonly ["solid", "soft", "outline", "clear"];
export declare const VariantsBadge: readonly ["solid", "soft", "outline"];
export declare const Weights: readonly ["light", "regular", "medium", "bold"];
export declare const Margins: readonly ["m", "mt", "mr", "mb", "ml", "mx", "my"];
export declare const Paddings: readonly ["p", "pt", "pr", "pb", "pl", "px", "py"];
export declare const Aligns: readonly ["start", "center", "end"];
export declare const Displays: readonly ["none", "inline-flex", "flex"];
export declare const Justifys: readonly ["start", "center", "end", "around", "between", "evenly", "normal"];
export declare const Directions: readonly ["row", "column", "row-reverse", "column-reverse"];
export declare const AlignItems: readonly ["start", "center", "end", "baseline", "stretch", "normal"];
export declare const Wraps: readonly ["nowrap", "wrap", "wrap-reverse"];
export declare const Gaps: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
export declare const Grows: readonly ["0", "1"];
export declare const Shrinks: readonly ["0", "1"];
export declare const InputTypes: readonly ["number", "time", "text", "search", "password", "email", "tel", "url", "date", "datetime-local", "month", "week"];
export declare const TextTags: readonly ["div", "span", "label", "h1", "h2", "h3", "h4", "h5", "h6", "p"];
declare const marginValues: readonly ["auto", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9"];
export interface MarginProps {
    m?: (typeof marginValues)[number];
    mx?: (typeof marginValues)[number];
    my?: (typeof marginValues)[number];
    mt?: (typeof marginValues)[number];
    mr?: (typeof marginValues)[number];
    mb?: (typeof marginValues)[number];
    ml?: (typeof marginValues)[number];
}
export declare function extractMarginProps<T extends MarginProps>(props: T): {
    m: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "auto" | "-1" | "-2" | "-3" | "-4" | "-5" | "-6" | "-7" | "-8" | "-9" | undefined;
    mx: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "auto" | "-1" | "-2" | "-3" | "-4" | "-5" | "-6" | "-7" | "-8" | "-9" | undefined;
    my: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "auto" | "-1" | "-2" | "-3" | "-4" | "-5" | "-6" | "-7" | "-8" | "-9" | undefined;
    mt: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "auto" | "-1" | "-2" | "-3" | "-4" | "-5" | "-6" | "-7" | "-8" | "-9" | undefined;
    mr: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "auto" | "-1" | "-2" | "-3" | "-4" | "-5" | "-6" | "-7" | "-8" | "-9" | undefined;
    mb: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "auto" | "-1" | "-2" | "-3" | "-4" | "-5" | "-6" | "-7" | "-8" | "-9" | undefined;
    ml: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "auto" | "-1" | "-2" | "-3" | "-4" | "-5" | "-6" | "-7" | "-8" | "-9" | undefined;
    rest: Omit<T, "m" | "mt" | "mr" | "mb" | "ml" | "mx" | "my">;
};
export declare function extractMarginPropsClass<T extends MarginProps>(props: T): string;
declare const paddingValues: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
export interface PaddingProps {
    p?: (typeof paddingValues)[number];
    px?: (typeof paddingValues)[number];
    py?: (typeof paddingValues)[number];
    pt?: (typeof paddingValues)[number];
    pr?: (typeof paddingValues)[number];
    pb?: (typeof paddingValues)[number];
    pl?: (typeof paddingValues)[number];
}
export declare function extractPaddingProps<T extends PaddingProps>(props: T): {
    p: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | undefined;
    px: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | undefined;
    py: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | undefined;
    pt: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | undefined;
    pr: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | undefined;
    pb: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | undefined;
    pl: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | undefined;
    rest: Omit<T, "p" | "pt" | "pr" | "pb" | "pl" | "px" | "py">;
};
export declare function extractPaddingPropsClass<T extends PaddingProps>(props: T): string;
declare const positionValues: readonly ["static", "relative", "absolute", "fixed", "sticky"];
declare const positionEdgeValues: readonly ["auto", "0", "50%", "100%"];
declare const widthHeightValues: readonly ["auto", "min-content", "max-content", "100%", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
declare const flexShrinkValues: readonly ["0", "1"];
declare const flexGrowValues: readonly ["0", "1"];
export interface LayoutProps {
    position?: (typeof positionValues)[number];
    inset?: (typeof positionEdgeValues)[number];
    top?: (typeof positionEdgeValues)[number];
    right?: (typeof positionEdgeValues)[number];
    bottom?: (typeof positionEdgeValues)[number];
    left?: (typeof positionEdgeValues)[number];
    width?: (typeof widthHeightValues)[number];
    height?: (typeof widthHeightValues)[number];
    shrink?: (typeof flexShrinkValues)[number];
    grow?: (typeof flexGrowValues)[number];
}
export declare function extractLayoutProps<T extends LayoutProps>(props: T): {
    position: "static" | "relative" | "absolute" | "fixed" | "sticky" | undefined;
    width: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "auto" | "100%" | "min-content" | "max-content" | undefined;
    height: "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "auto" | "100%" | "min-content" | "max-content" | undefined;
    inset: "0" | "auto" | "50%" | "100%" | undefined;
    top: "0" | "auto" | "50%" | "100%" | undefined;
    bottom: "0" | "auto" | "50%" | "100%" | undefined;
    left: "0" | "auto" | "50%" | "100%" | undefined;
    right: "0" | "auto" | "50%" | "100%" | undefined;
    shrink: "0" | "1" | undefined;
    grow: "0" | "1" | undefined;
    rest: Omit<T, "position" | "width" | "height" | "inset" | "top" | "bottom" | "left" | "right" | "shrink" | "grow">;
};
type CleanableProps = Partial<PaddingProps & MarginProps & LayoutProps>;
export declare function cleanProps<T extends CleanableProps>(props: T): T;
export {};
